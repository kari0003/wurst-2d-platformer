package Level
import LevelData
import RenderModule
import Players
import PlayerData
import PlayerHero
import ClosureTimers
import CollisionModule
import HashMap
import Entity
import Background

public Level currentLevel = null

public class Level
    private LevelData levelData
    private LevelRenderer renderer
    private CollisionHandler collision
    private let entityMap = new HashMap<ObjectData, Entity>
    private let backgrounds = new LinkedList<Background>

    construct(LevelData levelData, LevelRenderer renderer, CollisionHandler collision)
        this.levelData = levelData
        this.renderer = renderer
        this.collision = collision
        renderer.setLevelData(levelData)
        collision.setLevelData(levelData)

    function start()
        ALL_PLAYERS.forEach() p ->
            let hero = new PlayerHero(p, levelData.getStartPosition())
            p.getData().setHero(hero)
            backgrounds.push(new Background("bacground-foggy-forest.tga", vec2(0.6, 0.6), p.getData().camera))
            levelData.addObject(hero.objectData)
            entityMap.put(hero.objectData, hero)

        doPeriodically(ANIMATION_PERIOD) (cb) ->
            for obj in levelData.getObjects()
                collision.apply(obj, entityMap.get(obj))
            for bg in backgrounds
                bg.render()
            renderer.draw()

    function getData() returns LevelData
        return levelData

    ondestroy
        destroy backgrounds
