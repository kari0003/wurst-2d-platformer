package SimpleLevelLoader
import LinkedList
import Level
import LevelData
import Textures
import SimpleLevelRenderer

public function int.toTileData() returns TileData
    switch this
        case 0
            return new TileData()
        case 1
            return new TileData(Pathing.BLOCKED, Textures.icon_Map_Blizzard)
    return null

public class SimpleLevelSaveData
    LinkedList<int> tileList
    int width
    int height

    construct(LinkedList<int> tiles, int width, int height)
        this.tileList = tiles
        this.width = width
        this.height = height

public class SimpleLevelLoader

    static function load(SimpleLevelSaveData levelSaveData) returns Level
        let data = new LevelData(levelSaveData.width, levelSaveData.height)
        var x = 0
        var y = levelSaveData.height - 1

        for tileId from levelSaveData.tileList.staticItr()
            data.setTile(x, y, tileId.toTileData())
            x++
            if x == levelSaveData.width
                x = 0
                y--


        let renderer = new SimpleLevelRenderer()
        let level = new Level(data, renderer)
        return level


