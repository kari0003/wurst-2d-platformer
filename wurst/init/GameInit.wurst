package GameInit
import ClosureTimers
import LevelLoader
import Level_01
import Level_02
import Level_03
import Level_04
import Level_05
import Level_Playground
import EntityManagement
import SoundUtils

let SOUND_QN = new SoundDefinition(Sounds.questNew, false)
var debug = false

init

    let debugTrigger = CreateTrigger()
    debugTrigger.registerPlayerChatEvent(Player(0), "-d", true)
    debugTrigger.addAction() ->
        debug = true
        printTimed("|cffff3333Debug mode activated!", 20.)

    doAfter(.1) () ->
        hideOriginFrames(true)
        SOUND_QN.play()
        printTimed("|cffffcc00Bigfoot has been sighted nearby.|r", 10.)
        printTimed("Go check it out!\n\n", 10.)
        printTimed("Controls:", 10.)
        printTimed("    - Arrow keys to move and jump", 10.)
        printTimed("    - ESC key to respawn", 10.)


    doAfter(5.) ->
        startEntityLoop()

        let level05 = LevelLoader.load(LEVEL_05_DATA)

        let level04 = LevelLoader.load(LEVEL_04_DATA)
        level04.nextLevel = level05

        let level03 = LevelLoader.load(LEVEL_03_DATA)
        level03.nextLevel = level04

        let level02 = LevelLoader.load(LEVEL_02_DATA)
        level02.nextLevel = level03

        let level01 = LevelLoader.load(LEVEL_01_DATA)
        level01.nextLevel = level02

        if not debug
            level01.start()
        else
            let levelDebug = LevelLoader.load(LEVEL_PLAYGROUND_DATA)
            levelDebug.nextLevel = level01
            levelDebug.start()

        EnableOcclusion(false)
        createVision(players[0], playableMapRect, false)
