package PlayerHero
import Entity
import DummyRecycler
import KeyUtils
import ObjectData
import Textures
import Interpolation

public class PlayerHero extends Entity
    let objectData = new ObjectData()
    let dummyUnit = DummyRecycler.get(ZERO2, angle(0))

    var acceleration = ZERO2
    var onGround = false

    construct(player owner, vec2 pos)
        super(owner, pos)
        sleeps = false
        objectData.texturePath = Textures.icon_folder_up
        objectData.size = vec2(72, 72)
        objectData.color = owner.getColor().toColor().withAlpha(225)

    function jump()
        if onGround
            vel.y = 18
            onGround = false


    override function update()
        super.update()
        dummyUnit.setXY(pos)
        objectData.pos = pos.toVec2()
        if not onGround
            vel.y += gravity

        checkInput(false)

    function checkInput(boolean jump)
        let downKeys = owner.getDownKeys()
        if jump and downKeys.up
            jump()

        if downKeys.left and not downKeys.right
            acceleration = LEFT * 8
        else if downKeys.right and not downKeys.left
            acceleration = RIGHT * 8
        else
            acceleration = acceleration.lerp(ZERO2, 0.45)


        if not jump
            vel.x = vel.x.lerp(acceleration.x, 0.35)

        setState()

    function setState()
        let downKeys = owner.getDownKeys()
        if onGround and downKeys.left and not downKeys.right and vel.x < -2
            objectData.state = "lwalk"
        else if onGround and downKeys.right and not downKeys.left and vel.x > 2
            objectData.state = "walk"
        else if vel.x < -2
            objectData.state = "lstand"
        else if vel.x > 2
            objectData.state = "stand"
